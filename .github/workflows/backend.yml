name: Django application
on: [push]
env:
  POSTGRES_HOST: localhost
  POSTGRES_DB: github_actions
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: github_actions
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: psycopg2 prerequisites
        run: sudo apt-get install python-dev libpq-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run tests
        run: pytest -n 2
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build & Publish Image
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: type=registry,ref=${{ secrets.REGISTRY_URL }}/${{ secrets.DOCKER_REPOSITORY }}:${{ env.BRANCH_NAME }}
          cache-to: type=inline
          tags: |
            ${{ secrets.REGISTRY_URL }}/${{ secrets.DOCKER_REPOSITORY }}:${{ env.BRANCH_NAME }}
            ${{ secrets.REGISTRY_URL }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Run tests
        run: python -m flake8 --format=default .
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Run tests
        run: python -m mypy .
